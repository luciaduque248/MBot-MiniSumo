// generated by mBlock5 for mBot
// codes make you happy

#include <MeMCore.h>
#include <Arduino.h>
#include <Wire.h>
#include <SoftwareSerial.h>

MeLineFollower linefollower_2(3);
MeUltrasonicSensor ultrasonic_3(1);
MeBuzzer buzzer;
MeRGBLed rgbled_7(7, 2);
MeDCMotor motor_9(9);
MeDCMotor motor_10(10);

void move(int direction, int speed) {
  int leftSpeed = 0;
  int rightSpeed = 0;
  if(direction == 1) {
    leftSpeed = speed;
    rightSpeed = speed;
  } else if(direction == 2) {
    leftSpeed = -speed;
    rightSpeed = -speed;
  } else if(direction == 3) {
    leftSpeed = -speed;
    rightSpeed = speed;
  } else if(direction == 4) {
    leftSpeed = speed;
    rightSpeed = -speed;
  }
  motor_9.run((9) == M1 ? -(leftSpeed) : (leftSpeed));
  motor_10.run((10) == M1 ? -(rightSpeed) : (rightSpeed));
}

void _delay(float seconds) {
  long endTime = millis() + seconds * 1000;
  while(millis() < endTime) _loop();
}

void setup() {
  Serial.begin(9600);

  pinMode(A7, INPUT);
  rgbled_7.fillPixelsBak(0, 2, 1);
  while(!(analogRead(A7) > 10)) {
    _loop();
  }
  
  while(analogRead(A7) > 10) {
    _loop();
  }
  
  while(1) {
    // LIMITE DEL RING

    int distancia_ring_linea = linefollower_2.readSensors();
      Serial.print("Distancia de la Linea: ");
      Serial.println(distancia_ring_linea);

    while(distancia_ring_linea != 0) {
      _loop();

      double distancia = ultrasonic_3.distanceCm();
      Serial.print("Distancia: ");
      Serial.println(distancia);

      // OPONENTE
      if(distancia < 10) { // Si el oponente está a menos de 10 cm
        // TOCAR NOTA MUSICAL: MI
        buzzer.tone(165, 0.25 * 1000);
        _delay(0.02);
        // ALUMBRAR ROJO
        rgbled_7.setColor(0, 255, 0, 0);
        rgbled_7.show();

        // Ir hacia adelante a toda potencia
        move(1, 100);

      } else {
        // Si el oponente está a mas de 10 cm, retroceder y luego girar a la derecha
        move(2, 100);
        _delay(0.5);
        move(4, 100);
        _delay(0.5);
      }
    }

    // TOCAR NOTA MUSICA: DO
    buzzer.tone(65, 1 * 1000);
    _delay(0.02);
    // ALUMBRAR VERDE
    rgbled_7.setColor(0, 140, 255, 0);
    rgbled_7.show();

    // Girar a la izquierda para buscar el ring nuevamente
    move(3, 100);
    _delay(0.5);
  }
}



void _loop() {
}

void loop() {
  _loop();
}